version: "3"
volumes:
  dbbackups:
  postgis-data:

services:
  meter_project: # name of our service
    build: # build configuration
      context: . # dot means in our current directory
    container_name: meter_project
    ports:
      - "8000:8000" #from port 8000 on our host to port 8000 on our image.
    volumes: #volume allows us to get the updates that we make to our project into our Docker image in real time.
      - ./meter_project:/meter_project #maps the app directory which we have in our project to the app directory in our Docker image.
    command: tail -F anything
    #command: bash -c "sleep 5s && python3 manage.py migrate  && python3 manage.py runserver 0.0.0.0:8000" 
    environment:  
      - DB_HOST=db # equal to the name of the service
      - DB_NAME=gis # equal to the POSTGRES_DB name
      - DB_USER=docker # equal to the POSTGRES_USER
      - DB_PASS=docker # equal to the POSTGRES_PASSWORD
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on: # when our app service depends on db
      - db
      - redis
  
  celery:
    build: .
    #command: tail -F anything
    command: celery -A meter_project beat 
    volumes:
      - .:/usr/src/app
    environment:
      - DB_HOST=db # equal to the name of the service
      - DB_NAME=gis # equal to the POSTGRES_DB name
      - DB_USER=docker # equal to the POSTGRES_USER
      - DB_PASS=docker # equal to the POSTGRES_PASSWORD
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - meter_project
      - redis

  db:
    image: kartoza/postgis:13-3.1
    ports:
      - 5432:5432
    volumes:
      - postgis-data:/var/lib/postgresql
      - dbbackups:/backups

    environment:  # important that this is written exactly as the setting that Postgres container is expecting when it starts.
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    restart: on-failure

  redis:
    image: "redis:6.2"
